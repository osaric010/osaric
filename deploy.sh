#!/bin/bash

# ุณูุฑูุจุช ุงููุดุฑ ุงูุชููุงุฆู ููุธุงู ุญุณุงุจุงุช ุฃูุณุงุฑูู
# Automated deployment script for Osaric Accounts System

set -e

echo "๐ ุจุฏุก ุนูููุฉ ุงููุดุฑ..."
echo "๐ Starting deployment process..."

# ุชุญุฏูุฏ ุงููุชุบูุฑุงุช
PROJECT_NAME="osaric_accounts"
PROJECT_DIR="/opt/$PROJECT_NAME"
VENV_DIR="/opt/${PROJECT_NAME}_env"
BACKUP_DIR="/var/backups/$PROJECT_NAME"
NGINX_CONFIG="/etc/nginx/sites-available/$PROJECT_NAME"
SYSTEMD_SERVICE="/etc/systemd/system/$PROJECT_NAME.service"

# ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ
echo "๐ฆ ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ..."
if [ -d "$PROJECT_DIR" ]; then
    sudo cp -r "$PROJECT_DIR" "$BACKUP_DIR/backup_$(date +%Y%m%d_%H%M%S)"
fi

# ุชุญุฏูุซ ุงูููุฏ
echo "๐ฅ ุชุญุฏูุซ ุงูููุฏ..."
if [ -d "$PROJECT_DIR/.git" ]; then
    cd "$PROJECT_DIR"
    sudo git pull origin main
else
    sudo git clone https://github.com/yourusername/osaric-accounts.git "$PROJECT_DIR"
fi

# ุชูุนูู ุงูุจูุฆุฉ ุงูุงูุชุฑุงุถูุฉ
echo "๐ง ุชูุนูู ุงูุจูุฆุฉ ุงูุงูุชุฑุงุถูุฉ..."
source "$VENV_DIR/bin/activate"

# ุชุซุจูุช ุงููุชุทูุจุงุช
echo "๐ฆ ุชุซุจูุช ุงููุชุทูุจุงุช..."
cd "$PROJECT_DIR"
pip install -r requirements_production.txt

# ุชุทุจูู ุงูุชุญุฏูุซุงุช ุนูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
echo "๐๏ธ ุชุทุจูู ุชุญุฏูุซุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช..."
python manage.py migrate --noinput

# ุฌูุน ุงููููุงุช ุงูุซุงุจุชุฉ
echo "๐ ุฌูุน ุงููููุงุช ุงูุซุงุจุชุฉ..."
python manage.py collectstatic --noinput

# ุฅุนุงุฏุฉ ุชุดุบูู ุงูุฎุฏูุงุช
echo "๐ ุฅุนุงุฏุฉ ุชุดุบูู ุงูุฎุฏูุงุช..."
sudo systemctl restart "$PROJECT_NAME"
sudo systemctl restart nginx

# ุงูุชุญูู ูู ุญุงูุฉ ุงูุฎุฏูุงุช
echo "โ ุงูุชุญูู ูู ุญุงูุฉ ุงูุฎุฏูุงุช..."
if sudo systemctl is-active --quiet "$PROJECT_NAME"; then
    echo "โ ุฎุฏูุฉ $PROJECT_NAME ุชุนูู ุจูุฌุงุญ"
else
    echo "โ ุฎุทุฃ ูู ุฎุฏูุฉ $PROJECT_NAME"
    exit 1
fi

if sudo systemctl is-active --quiet nginx; then
    echo "โ ุฎุฏูุฉ Nginx ุชุนูู ุจูุฌุงุญ"
else
    echo "โ ุฎุทุฃ ูู ุฎุฏูุฉ Nginx"
    exit 1
fi

# ุชูุธูู ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ ุงููุฏููุฉ
echo "๐งน ุชูุธูู ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ ุงููุฏููุฉ..."
find "$BACKUP_DIR" -name "backup_*" -mtime +7 -exec rm -rf {} \;

echo "๐ ุชู ุงููุดุฑ ุจูุฌุงุญ!"
echo "๐ ุงููููุน ูุชุงุญ ุนูู: https://your-domain.com"
echo "๐ Deployment completed successfully!"
